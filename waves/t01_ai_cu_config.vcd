$date
	Thu Jul 24 14:34:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1us
$end
$scope module t01_ai_cu_config_tb $end
$var wire 4 ! stride [3:0] $end
$var wire 1 " relu_en $end
$var wire 32 # rdata [31:0] $end
$var wire 1 $ pool_en $end
$var wire 16 % out_ch [15:0] $end
$var wire 4 & layer_type [3:0] $end
$var wire 4 ' kernel_size [3:0] $end
$var wire 16 ( in_width [15:0] $end
$var wire 16 ) in_height [15:0] $end
$var wire 16 * in_ch [15:0] $end
$var wire 32 + addr_wgt_base [31:0] $end
$var wire 32 , addr_ofm_base [31:0] $end
$var wire 32 - addr_ifm_base [31:0] $end
$var parameter 32 . ADDR_WIDTH $end
$var parameter 32 / DATA_WIDTH $end
$var reg 6 0 addr [5:0] $end
$var reg 1 1 clk $end
$var reg 1 2 cs $end
$var reg 1 3 rst $end
$var reg 32 4 wdata [31:0] $end
$var reg 1 5 we $end
$scope module cu_config $end
$var wire 6 6 addr [5:0] $end
$var wire 32 7 addr_ifm_base [31:0] $end
$var wire 32 8 addr_ofm_base [31:0] $end
$var wire 32 9 addr_wgt_base [31:0] $end
$var wire 1 1 clk $end
$var wire 1 2 cs $end
$var wire 1 3 rst $end
$var wire 32 : wdata [31:0] $end
$var wire 1 5 we $end
$var wire 4 ; stride [3:0] $end
$var wire 1 " relu_en $end
$var wire 1 $ pool_en $end
$var wire 16 < out_ch [15:0] $end
$var wire 4 = layer_type [3:0] $end
$var wire 4 > kernel_size [3:0] $end
$var wire 16 ? in_width [15:0] $end
$var wire 16 @ in_height [15:0] $end
$var wire 16 A in_ch [15:0] $end
$var parameter 32 B ADDR_WIDTH $end
$var parameter 32 C DATA_WIDTH $end
$var parameter 32 D REG_COUNT $end
$var reg 32 E rdata [31:0] $end
$scope begin $unm_blk_5 $end
$var integer 32 F i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 G i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 H j [31:0] $end
$upscope $end
$upscope $end
$scope task tog_rst $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 D
b100000 C
b110 B
b100000 /
b110 .
$end
#0
$dumpvars
b0 H
b0 G
b10000 F
b0 E
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b11101000 :
b0 9
b0 8
b0 7
b11110 6
x5
b11101000 4
13
x2
01
b11110 0
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
0$
b0 #
0"
b0 !
$end
#1000
b10000 F
11
#2000
01
b10 G
b10 H
15
12
03
#3000
b11101000 ,
b11101000 8
11
