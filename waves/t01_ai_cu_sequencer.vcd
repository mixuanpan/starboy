$date
	Thu Jul 24 11:15:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1us
$end
$scope module t01_ai_cu_sequencer_tb $end
$var wire 1 ! seq_done $end
$var wire 11 " row_cnt [10:0] $end
$var wire 1 # relu_valid $end
$var wire 1 $ pool_valid $end
$var wire 1 % conv_valid $end
$var wire 11 & col_cnt [10:0] $end
$var parameter 32 ' C_WIDTH $end
$var parameter 32 ( HOUT_WIDTH $end
$var parameter 32 ) H_WIDTH $end
$var parameter 32 * K_WIDTH $end
$var parameter 32 + S_WIDTH $end
$var parameter 32 , WOUT_WIDTH $end
$var parameter 32 - W_WIDTH $end
$var reg 1 . clk $end
$var reg 8 / in_ch [7:0] $end
$var reg 10 0 in_height [9:0] $end
$var reg 10 1 in_width [9:0] $end
$var reg 4 2 kernel_size [3:0] $end
$var reg 1 3 pool_en $end
$var reg 1 4 relu_en $end
$var reg 1 5 rst $end
$var reg 1 6 start_decoded $end
$var reg 4 7 stride [3:0] $end
$scope module pipeline_controller $end
$var wire 1 . clk $end
$var wire 11 8 col_cnt [10:0] $end
$var wire 1 % conv_valid $end
$var wire 8 9 in_ch [7:0] $end
$var wire 10 : in_height [9:0] $end
$var wire 10 ; in_width [9:0] $end
$var wire 4 < kernel_size [3:0] $end
$var wire 1 3 pool_en $end
$var wire 1 $ pool_valid $end
$var wire 1 4 relu_en $end
$var wire 1 # relu_valid $end
$var wire 11 = row_cnt [10:0] $end
$var wire 1 5 rst $end
$var wire 1 ! seq_done $end
$var wire 1 > start_decoded $end
$var wire 4 ? stride [3:0] $end
$var wire 1 @ t1 $end
$var wire 1 A row_edge $end
$var wire 11 B division [10:0] $end
$var wire 1 C col_edge $end
$var wire 11 D W_out [10:0] $end
$var wire 11 E H_out [10:0] $end
$var parameter 32 F C_WIDTH $end
$var parameter 32 G HOUT_WIDTH $end
$var parameter 32 H H_WIDTH $end
$var parameter 32 I K_WIDTH $end
$var parameter 32 J S_WIDTH $end
$var parameter 32 K WOUT_WIDTH $end
$var parameter 32 L W_WIDTH $end
$var reg 11 M c_cnt [10:0] $end
$var reg 4 N fill_cnt [3:0] $end
$var reg 11 O r_cnt [10:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 P i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 Q j [31:0] $end
$upscope $end
$upscope $end
$scope task tog_rst $end
$upscope $end
$scope task tog_start $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 L
b1011 K
b100 J
b100 I
b1010 H
b1011 G
b1000 F
b1010 -
b1011 ,
b100 +
b100 *
b1010 )
b1011 (
b1000 '
$end
#0
$dumpvars
b0 Q
b0 P
b0 O
b0 N
b0 M
b1000 E
b10 D
0C
b1000 B
0A
1@
b101 ?
z>
b0 =
b1111 <
b100 ;
b1010 :
b100 9
b0 8
b101 7
06
15
x4
x3
b1111 2
b100 1
b1010 0
b100 /
0.
b0 &
0%
0$
0#
b0 "
0!
$end
#1000
1.
#2000
0.
16
05
#3000
b1 N
1.
#4000
0.
06
#5000
b10 N
1.
03
04
#6000
0.
13
b1 Q
#7000
b11 N
1.
03
14
b1 P
b0 Q
#8000
0.
13
b1 Q
#9000
b100 N
1.
b10 P
b10 Q
#10000
0.
#11000
b101 N
1.
#12000
0.
#13000
b110 N
1.
#14000
0.
#15000
b111 N
1.
#16000
0.
#17000
b1000 N
1.
#18000
0.
#19000
b1001 N
1.
#20000
0.
#21000
b1010 N
1.
#22000
0.
#23000
b1011 N
1.
#24000
0.
#25000
b1100 N
1.
#26000
0.
#27000
b1101 N
1.
#28000
0.
#29000
1#
1%
0@
b1110 N
1.
#30000
0.
#31000
1C
b1 &
b1 8
b1 M
1.
#32000
0.
#33000
1A
b1 "
b1 =
b1 O
0C
b0 &
b0 8
b0 M
1.
#34000
0.
#35000
1$
1C
b1 &
b1 8
b1 M
1.
#36000
0.
#37000
0$
0A
b10 "
b10 =
b10 O
0C
b0 &
b0 8
b0 M
1.
#38000
0.
#39000
1C
b1 &
b1 8
b1 M
1.
#40000
0.
#41000
1A
b11 "
b11 =
b11 O
0C
b0 &
b0 8
b0 M
1.
#42000
0.
#43000
1$
1C
b1 &
b1 8
b1 M
1.
#44000
0.
#45000
0$
0A
b100 "
b100 =
b100 O
0C
b0 &
b0 8
b0 M
1.
#46000
0.
#47000
1C
b1 &
b1 8
b1 M
1.
#48000
0.
#49000
1A
b101 "
b101 =
b101 O
0C
b0 &
b0 8
b0 M
1.
#50000
0.
#51000
1$
1C
b1 &
b1 8
b1 M
1.
#52000
0.
#53000
0$
0A
b110 "
b110 =
b110 O
0C
b0 &
b0 8
b0 M
1.
#54000
0.
#55000
1C
b1 &
b1 8
b1 M
1.
#56000
0.
#57000
1A
b111 "
b111 =
b111 O
0C
b0 &
b0 8
b0 M
1.
#58000
0.
#59000
0#
0%
0$
0!
1C
b1 &
b1 8
b1 M
1.
16
#60000
0.
#61000
1.
06
#62000
0.
#63000
1.
#64000
0.
